// generated with ast extension for cup
// version 0.8
// 16/1/2022 22:9:55


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(MethodDecl MethodDecl);
    public void visit(Mulop Mulop);
    public void visit(ConstructorDecl ConstructorDecl);
    public void visit(Relop Relop);
    public void visit(Assignop Assignop);
    public void visit(Variable Variable);
    public void visit(StatementList StatementList);
    public void visit(Addop Addop);
    public void visit(RecordDecl RecordDecl);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(ConstList ConstList);
    public void visit(MethDeclList MethDeclList);
    public void visit(DeclList DeclList);
    public void visit(Designator Designator);
    public void visit(Term Term);
    public void visit(Condition Condition);
    public void visit(IdentList IdentList);
    public void visit(Statements Statements);
    public void visit(OptElseBranch OptElseBranch);
    public void visit(IfCondition IfCondition);
    public void visit(Label Label);
    public void visit(ExtendedNConstructorClassDeclarationName ExtendedNConstructorClassDeclarationName);
    public void visit(VarDeclList VarDeclList);
    public void visit(Expr Expr);
    public void visit(ActPars ActPars);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(Const Const);
    public void visit(SingleStmt SingleStmt);
    public void visit(IfCondParen IfCondParen);
    public void visit(Statement Statement);
    public void visit(Expression Expression);
    public void visit(VarDecl VarDecl);
    public void visit(ClassDecl ClassDecl);
    public void visit(ConstDecl ConstDecl);
    public void visit(CondFact CondFact);
    public void visit(FormPar FormPar);
    public void visit(VarDeclarations VarDeclarations);
    public void visit(RecordDecName RecordDecName);
    public void visit(Identificator Identificator);
    public void visit(NConstructorClassDeclarationName NConstructorClassDeclarationName);
    public void visit(FormPars FormPars);
    public void visit(ModOp ModOp);
    public void visit(DivOp DivOp);
    public void visit(MulOperation MulOperation);
    public void visit(MinusOp MinusOp);
    public void visit(PlusOp PlusOp);
    public void visit(LteOp LteOp);
    public void visit(LtOp LtOp);
    public void visit(GteOp GteOp);
    public void visit(GtOp GtOp);
    public void visit(DiffOp DiffOp);
    public void visit(EqualOp EqualOp);
    public void visit(AssValue AssValue);
    public void visit(Lab Lab);
    public void visit(LeftBracket LeftBracket);
    public void visit(FieldArrayName FieldArrayName);
    public void visit(FieldName FieldName);
    public void visit(SimpleArray SimpleArray);
    public void visit(FieldArray FieldArray);
    public void visit(Field Field);
    public void visit(OneIdent OneIdent);
    public void visit(ExprFactor ExprFactor);
    public void visit(NewFactorExpr NewFactorExpr);
    public void visit(NewFactor NewFactor);
    public void visit(BoolConstFactor BoolConstFactor);
    public void visit(CharConstFactor CharConstFactor);
    public void visit(NumConstFactor NumConstFactor);
    public void visit(DesignatorParsFactor DesignatorParsFactor);
    public void visit(DesignatorNoParsFactor DesignatorNoParsFactor);
    public void visit(DesignatorFactor DesignatorFactor);
    public void visit(OneFactor OneFactor);
    public void visit(Factors Factors);
    public void visit(OneTerm OneTerm);
    public void visit(Terms Terms);
    public void visit(PositiveExpr PositiveExpr);
    public void visit(NegativeExpr NegativeExpr);
    public void visit(RelCond RelCond);
    public void visit(ExprCond ExprCond);
    public void visit(AndDummy AndDummy);
    public void visit(OneAndTerm OneAndTerm);
    public void visit(AndTerms AndTerms);
    public void visit(OrDummy OrDummy);
    public void visit(ErrorCondStmt ErrorCondStmt);
    public void visit(OneOrCondition OneOrCondition);
    public void visit(OrConditions OrConditions);
    public void visit(OneActPars OneActPars);
    public void visit(ActParsList ActParsList);
    public void visit(DesignatorDecrement DesignatorDecrement);
    public void visit(DesignatorIncrement DesignatorIncrement);
    public void visit(DesignatorPars DesignatorPars);
    public void visit(DesignatorNoPars DesignatorNoPars);
    public void visit(DesignatorAssign DesignatorAssign);
    public void visit(Empty Empty);
    public void visit(WhileDummy WhileDummy);
    public void visit(ElseDummy ElseDummy);
    public void visit(OptElseBranch_Eps OptElseBranch_Eps);
    public void visit(OptElseBranch_NoEps OptElseBranch_NoEps);
    public void visit(IfCondParen_Error IfCondParen_Error);
    public void visit(IfCondParen_Cond IfCondParen_Cond);
    public void visit(IfDummy IfDummy);
    public void visit(IfCondition_Cond IfCondition_Cond);
    public void visit(GotoStmt GotoStmt);
    public void visit(PrintNumStmt PrintNumStmt);
    public void visit(PrintStmt PrintStmt);
    public void visit(ReadStmt ReadStmt);
    public void visit(ReturnExprStmt ReturnExprStmt);
    public void visit(ReturnStmt ReturnStmt);
    public void visit(ContinueStmt ContinueStmt);
    public void visit(BreakStmt BreakStmt);
    public void visit(DoWhileStmt DoWhileStmt);
    public void visit(IfStatement IfStatement);
    public void visit(ErrorAssOpStmt ErrorAssOpStmt);
    public void visit(DesignatorStmt DesignatorStmt);
    public void visit(MultipleStatements MultipleStatements);
    public void visit(Stmts Stmts);
    public void visit(NoLabelStmt NoLabelStmt);
    public void visit(LabelStmt LabelStmt);
    public void visit(NoStatement NoStatement);
    public void visit(MoreStatements MoreStatements);
    public void visit(Type Type);
    public void visit(ParamenterArray ParamenterArray);
    public void visit(Parameter Parameter);
    public void visit(NoFormalPar NoFormalPar);
    public void visit(ErrorFormPars ErrorFormPars);
    public void visit(FormalPar FormalPar);
    public void visit(FormalPars FormalPars);
    public void visit(VoidTypeName VoidTypeName);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(VoidMethod VoidMethod);
    public void visit(RegularMethod RegularMethod);
    public void visit(NoMethod NoMethod);
    public void visit(Methods Methods);
    public void visit(RecordDeclName RecordDeclName);
    public void visit(Record Record);
    public void visit(NoVar NoVar);
    public void visit(Vars Vars);
    public void visit(ClassDeclarationName ClassDeclarationName);
    public void visit(ExtendedClassDeclarationName ExtendedClassDeclarationName);
    public void visit(ClassDeclaration ClassDeclaration);
    public void visit(NConstructorClassDeclaration NConstructorClassDeclaration);
    public void visit(ExtendedClassDeclaration ExtendedClassDeclaration);
    public void visit(ExtendedNConstructorClassDeclaration ExtendedNConstructorClassDeclaration);
    public void visit(Array Array);
    public void visit(Var Var);
    public void visit(MoreVariables MoreVariables);
    public void visit(OneVariable OneVariable);
    public void visit(VarDeclType VarDeclType);
    public void visit(DeclListError DeclListError);
    public void visit(Variables Variables);
    public void visit(BoolConstant BoolConstant);
    public void visit(CharConstant CharConstant);
    public void visit(NumConstant NumConstant);
    public void visit(MoreConstants MoreConstants);
    public void visit(NoConst NoConst);
    public void visit(ConstType ConstType);
    public void visit(Constants Constants);
    public void visit(NoDeclaraions NoDeclaraions);
    public void visit(RecordDeclarations RecordDeclarations);
    public void visit(ClassDeclarations ClassDeclarations);
    public void visit(VarDeclarationss VarDeclarationss);
    public void visit(ConstDeclarations ConstDeclarations);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
