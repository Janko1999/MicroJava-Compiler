INFO  16:12:45,030 - Compiling source file: D:\ETF\sedmiSemestar\PP1\Jflex\Izvorni kod\MJCompiler\test\program.mj
INFO  16:12:45,061 - #2 program
INFO  16:12:45,061 - #5 MJProgram
INFO  16:12:45,061 - #5 int
INFO  16:12:45,062 - #5 x
INFO  16:12:45,063 - #18 ;
INFO  16:12:45,063 - #5 int
INFO  16:12:45,063 - #5 y
INFO  16:12:45,063 - #18 ;
INFO  16:12:45,063 - #14 class
INFO  16:12:45,063 - #5 Test
INFO  16:12:45,063 - #16 {
INFO  16:12:45,064 - #5 int
INFO  16:12:45,064 - #5 b
INFO  16:12:45,064 - #12 [
INFO  16:12:45,064 - #13 ]
INFO  16:12:45,065 - #18 ;
INFO  16:12:45,065 - #5 int
INFO  16:12:45,065 - #5 a
INFO  16:12:45,065 - #18 ;
INFO  16:12:45,065 - #17 }
INFO  16:12:45,065 - #5 Test
INFO  16:12:45,065 - #5 t1
INFO  16:12:45,066 - #18 ;
INFO  16:12:45,066 - #5 int
INFO  16:12:45,066 - #5 niz
INFO  16:12:45,066 - #12 [
INFO  16:12:45,066 - #13 ]
INFO  16:12:45,066 - #18 ;
INFO  16:12:45,066 - #16 {
INFO  16:12:45,067 - #20 void
INFO  16:12:45,067 - #5 main
INFO  16:12:45,067 - #3 (
INFO  16:12:45,068 - #4 )
INFO  16:12:45,068 - #5 int
INFO  16:12:45,068 - #5 x
INFO  16:12:45,068 - #18 ;
INFO  16:12:45,068 - #5 int
INFO  16:12:45,068 - #5 y
INFO  16:12:45,069 - #18 ;
INFO  16:12:45,069 - #16 {
INFO  16:12:45,069 - #5 x
INFO  16:12:45,069 - #10 =
INFO  16:12:45,069 - #11 0
INFO  16:12:45,070 - #18 ;
INFO  16:12:45,070 - #22 do
INFO  16:12:45,071 - #16 {
INFO  16:12:45,071 - #47 if
INFO  16:12:45,071 - #3 (
INFO  16:12:45,071 - #5 x
INFO  16:12:45,071 - #45 ==
INFO  16:12:45,072 - #11 3
INFO  16:12:45,072 - #4 )
INFO  16:12:45,072 - #16 {
INFO  16:12:45,073 - #24 break
INFO  16:12:45,073 - #18 ;
INFO  16:12:45,073 - #17 }
INFO  16:12:45,073 - #48 else
INFO  16:12:45,073 - #16 {
INFO  16:12:45,074 - #5 x
INFO  16:12:45,074 - #30 ++
INFO  16:12:45,074 - #18 ;
INFO  16:12:45,074 - #17 }
INFO  16:12:45,074 - #28 print
INFO  16:12:45,074 - #3 (
INFO  16:12:45,074 - #5 x
INFO  16:12:45,074 - #4 )
INFO  16:12:45,075 - #18 ;
INFO  16:12:45,075 - #17 }
INFO  16:12:45,078 - #23 while
INFO  16:12:45,078 - #3 (
INFO  16:12:45,079 - #5 x
INFO  16:12:45,079 - #43 <
INFO  16:12:45,079 - #11 5
INFO  16:12:45,079 - #4 )
INFO  16:12:45,080 - #18 ;
INFO  16:12:45,080 - #17 }
INFO  16:12:45,080 - #17 }
INFO  16:12:45,086 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarationss(
    VarDeclarationss(
      ClassDeclarations(
        VarDeclarationss(
          VarDeclarationss(
            NoDeclaraions(
            ) [NoDeclaraions]
            Variables(
              VarDeclType(
                Type(
                 int
                ) [Type]
              ) [VarDeclType]
              OneVariable(
                Var(
                 x
                ) [Var]
              ) [OneVariable]
            ) [Variables]
          ) [VarDeclarationss]
          Variables(
            VarDeclType(
              Type(
               int
              ) [Type]
            ) [VarDeclType]
            OneVariable(
              Var(
               y
              ) [Var]
            ) [OneVariable]
          ) [Variables]
        ) [VarDeclarationss]
        ClassDeclaration(
          ClassDeclarationName(
           Test
          ) [ClassDeclarationName]
          Vars(
            Vars(
              NoVar(
              ) [NoVar]
              Variables(
                VarDeclType(
                  Type(
                   int
                  ) [Type]
                ) [VarDeclType]
                OneVariable(
                  Array(
                   b
                  ) [Array]
                ) [OneVariable]
              ) [Variables]
            ) [Vars]
            Variables(
              VarDeclType(
                Type(
                 int
                ) [Type]
              ) [VarDeclType]
              OneVariable(
                Var(
                 a
                ) [Var]
              ) [OneVariable]
            ) [Variables]
          ) [Vars]
        ) [ClassDeclaration]
      ) [ClassDeclarations]
      Variables(
        VarDeclType(
          Type(
           Test
          ) [Type]
        ) [VarDeclType]
        OneVariable(
          Var(
           t1
          ) [Var]
        ) [OneVariable]
      ) [Variables]
    ) [VarDeclarationss]
    Variables(
      VarDeclType(
        Type(
         int
        ) [Type]
      ) [VarDeclType]
      OneVariable(
        Array(
         niz
        ) [Array]
      ) [OneVariable]
    ) [Variables]
  ) [VarDeclarationss]
  Methods(
    NoMethod(
    ) [NoMethod]
    VoidMethod(
      VoidTypeName(
       main
      ) [VoidTypeName]
      NoFormalPar(
      ) [NoFormalPar]
      Vars(
        Vars(
          NoVar(
          ) [NoVar]
          Variables(
            VarDeclType(
              Type(
               int
              ) [Type]
            ) [VarDeclType]
            OneVariable(
              Var(
               x
              ) [Var]
            ) [OneVariable]
          ) [Variables]
        ) [Vars]
        Variables(
          VarDeclType(
            Type(
             int
            ) [Type]
          ) [VarDeclType]
          OneVariable(
            Var(
             y
            ) [Var]
          ) [OneVariable]
        ) [Variables]
      ) [Vars]
      MoreStatements(
        MoreStatements(
          NoStatement(
          ) [NoStatement]
          NoLabelStmt(
            DesignatorStmt(
              DesignatorAssign(
                OneIdent(
                 x
                ) [OneIdent]
                AssValue(
                ) [AssValue]
                PositiveExpr(
                  OneTerm(
                    OneFactor(
                      NumConstFactor(
                       0
                      ) [NumConstFactor]
                    ) [OneFactor]
                  ) [OneTerm]
                ) [PositiveExpr]
              ) [DesignatorAssign]
            ) [DesignatorStmt]
          ) [NoLabelStmt]
        ) [MoreStatements]
        NoLabelStmt(
          DoWhileStmt(
            Empty(
            ) [Empty]
            Stmts(
              MultipleStatements(
                MoreStatements(
                  MoreStatements(
                    NoStatement(
                    ) [NoStatement]
                    NoLabelStmt(
                      IfStatement(
                        IfCondition_Cond(
                          IfDummy(
                          ) [IfDummy]
                          IfCondParen_Cond(
                            OneOrCondition(
                              OneAndTerm(
                                RelCond(
                                  PositiveExpr(
                                    OneTerm(
                                      OneFactor(
                                        DesignatorFactor(
                                          OneIdent(
                                           x
                                          ) [OneIdent]
                                        ) [DesignatorFactor]
                                      ) [OneFactor]
                                    ) [OneTerm]
                                  ) [PositiveExpr]
                                  EqualOp(
                                  ) [EqualOp]
                                  PositiveExpr(
                                    OneTerm(
                                      OneFactor(
                                        NumConstFactor(
                                         3
                                        ) [NumConstFactor]
                                      ) [OneFactor]
                                    ) [OneTerm]
                                  ) [PositiveExpr]
                                ) [RelCond]
                              ) [OneAndTerm]
                            ) [OneOrCondition]
                          ) [IfCondParen_Cond]
                        ) [IfCondition_Cond]
                        Stmts(
                          MultipleStatements(
                            MoreStatements(
                              NoStatement(
                              ) [NoStatement]
                              NoLabelStmt(
                                BreakStmt(
                                ) [BreakStmt]
                              ) [NoLabelStmt]
                            ) [MoreStatements]
                          ) [MultipleStatements]
                        ) [Stmts]
                        OptElseBranch_NoEps(
                          ElseDummy(
                          ) [ElseDummy]
                          Stmts(
                            MultipleStatements(
                              MoreStatements(
                                NoStatement(
                                ) [NoStatement]
                                NoLabelStmt(
                                  DesignatorStmt(
                                    DesignatorIncrement(
                                      OneIdent(
                                       x
                                      ) [OneIdent]
                                    ) [DesignatorIncrement]
                                  ) [DesignatorStmt]
                                ) [NoLabelStmt]
                              ) [MoreStatements]
                            ) [MultipleStatements]
                          ) [Stmts]
                        ) [OptElseBranch_NoEps]
                      ) [IfStatement]
                    ) [NoLabelStmt]
                  ) [MoreStatements]
                  NoLabelStmt(
                    PrintStmt(
                      PositiveExpr(
                        OneTerm(
                          OneFactor(
                            DesignatorFactor(
                              OneIdent(
                               x
                              ) [OneIdent]
                            ) [DesignatorFactor]
                          ) [OneFactor]
                        ) [OneTerm]
                      ) [PositiveExpr]
                    ) [PrintStmt]
                  ) [NoLabelStmt]
                ) [MoreStatements]
              ) [MultipleStatements]
            ) [Stmts]
            WhileDummy(
            ) [WhileDummy]
            OneOrCondition(
              OneAndTerm(
                RelCond(
                  PositiveExpr(
                    OneTerm(
                      OneFactor(
                        DesignatorFactor(
                          OneIdent(
                           x
                          ) [OneIdent]
                        ) [DesignatorFactor]
                      ) [OneFactor]
                    ) [OneTerm]
                  ) [PositiveExpr]
                  LtOp(
                  ) [LtOp]
                  PositiveExpr(
                    OneTerm(
                      OneFactor(
                        NumConstFactor(
                         5
                        ) [NumConstFactor]
                      ) [OneFactor]
                    ) [OneTerm]
                  ) [PositiveExpr]
                ) [RelCond]
              ) [OneAndTerm]
            ) [OneOrCondition]
          ) [DoWhileStmt]
        ) [NoLabelStmt]
      ) [MoreStatements]
    ) [VoidMethod]
  ) [Methods]
) [Program]
INFO  16:12:45,087 - ===================================
INFO  16:12:45,090 - Obradjuje se klasa Test na liniji 3
INFO  16:12:45,091 - Obradjuje se funkcija main na liniji 13
INFO  16:12:45,091 - Usao u DoWhile petlju na liniji: 0
INFO  16:12:45,091 - Izasao iz DoWhile petlje na liniji: 2
INFO  16:12:45,091 -  Print count calls = 0
INFO  16:12:45,091 -  Deklarisanih promenljivih ima = 8
INFO  16:12:45,091 - ===================================
