INFO  20:48:06,827 - Compiling source file: D:\ETF\sedmiSemestar\PP1\Jflex\Izvorni kod\MJCompiler\test\program.mj
INFO  20:48:06,862 - #2 program
INFO  20:48:06,862 - #41 p
INFO  20:48:06,862 - #35 const
INFO  20:48:06,862 - #41 int
INFO  20:48:06,862 - #41 size
INFO  20:48:06,863 - #21 =
INFO  20:48:06,863 - #40 10
INFO  20:48:06,863 - #5 ;
INFO  20:48:06,863 - #36 class
INFO  20:48:06,863 - #41 Table
INFO  20:48:06,863 - #3 {
INFO  20:48:06,863 - #41 int
INFO  20:48:06,864 - #41 pos
INFO  20:48:06,864 - #23 [
INFO  20:48:06,864 - #22 ]
INFO  20:48:06,864 - #8 ,
INFO  20:48:06,865 - #41 neg
INFO  20:48:06,865 - #23 [
INFO  20:48:06,865 - #22 ]
INFO  20:48:06,865 - #5 ;
INFO  20:48:06,865 - #3 {
INFO  20:48:06,865 - #41 int
INFO  20:48:06,866 - #41 getp
INFO  20:48:06,866 - #6 (
INFO  20:48:06,866 - #41 int
INFO  20:48:06,866 - #41 idx
INFO  20:48:06,866 - #7 )
INFO  20:48:06,866 - #3 {
INFO  20:48:06,866 - #10 return
INFO  20:48:06,867 - #41 pos
INFO  20:48:06,867 - #23 [
INFO  20:48:06,867 - #41 idx
INFO  20:48:06,867 - #22 ]
INFO  20:48:06,867 - #5 ;
INFO  20:48:06,868 - #4 }
INFO  20:48:06,868 - #41 int
INFO  20:48:06,869 - #41 getn
INFO  20:48:06,869 - #6 (
INFO  20:48:06,869 - #41 int
INFO  20:48:06,869 - #41 idx
INFO  20:48:06,869 - #7 )
INFO  20:48:06,869 - #3 {
INFO  20:48:06,869 - #10 return
INFO  20:48:06,869 - #41 neg
INFO  20:48:06,870 - #23 [
INFO  20:48:06,870 - #41 idx
INFO  20:48:06,870 - #22 ]
INFO  20:48:06,870 - #5 ;
INFO  20:48:06,870 - #4 }
INFO  20:48:06,870 - #4 }
INFO  20:48:06,870 - #4 }
INFO  20:48:06,870 - #38 record
INFO  20:48:06,871 - #41 Board
INFO  20:48:06,871 - #3 {
INFO  20:48:06,871 - #41 int
INFO  20:48:06,871 - #41 rows
INFO  20:48:06,871 - #8 ,
INFO  20:48:06,871 - #41 columns
INFO  20:48:06,871 - #5 ;
INFO  20:48:06,871 - #4 }
INFO  20:48:06,871 - #41 Table
INFO  20:48:06,872 - #41 val
INFO  20:48:06,872 - #5 ;
INFO  20:48:06,872 - #41 Board
INFO  20:48:06,872 - #41 board
INFO  20:48:06,872 - #5 ;
INFO  20:48:06,872 - #3 {
INFO  20:48:06,872 - #15 void
INFO  20:48:06,872 - #41 f
INFO  20:48:06,872 - #6 (
INFO  20:48:06,873 - #41 char
INFO  20:48:06,873 - #41 ch
INFO  20:48:06,873 - #8 ,
INFO  20:48:06,873 - #41 int
INFO  20:48:06,873 - #41 a
INFO  20:48:06,873 - #8 ,
INFO  20:48:06,874 - #41 int
INFO  20:48:06,874 - #41 arg
INFO  20:48:06,874 - #7 )
INFO  20:48:06,874 - #41 int
INFO  20:48:06,874 - #41 x
INFO  20:48:06,874 - #5 ;
INFO  20:48:06,874 - #3 {
INFO  20:48:06,874 - #41 x
INFO  20:48:06,874 - #21 =
INFO  20:48:06,874 - #41 arg
INFO  20:48:06,875 - #5 ;
INFO  20:48:06,875 - #4 }
INFO  20:48:06,875 - #15 void
INFO  20:48:06,875 - #41 main
INFO  20:48:06,875 - #6 (
INFO  20:48:06,876 - #7 )
INFO  20:48:06,876 - #41 int
INFO  20:48:06,876 - #41 x
INFO  20:48:06,876 - #8 ,
INFO  20:48:06,876 - #41 i
INFO  20:48:06,876 - #5 ;
INFO  20:48:06,876 - #41 char
INFO  20:48:06,877 - #41 c
INFO  20:48:06,877 - #5 ;
INFO  20:48:06,877 - #3 {
INFO  20:48:06,877 - #41 val
INFO  20:48:06,877 - #21 =
INFO  20:48:06,877 - #20 new
INFO  20:48:06,877 - #41 Table
INFO  20:48:06,877 - #5 ;
INFO  20:48:06,877 - #41 val
INFO  20:48:06,877 - #32 .
INFO  20:48:06,877 - #41 pos
INFO  20:48:06,877 - #21 =
INFO  20:48:06,878 - #20 new
INFO  20:48:06,878 - #41 int
INFO  20:48:06,878 - #23 [
INFO  20:48:06,878 - #41 size
INFO  20:48:06,878 - #22 ]
INFO  20:48:06,878 - #5 ;
INFO  20:48:06,878 - #41 val
INFO  20:48:06,879 - #32 .
INFO  20:48:06,879 - #41 neg
INFO  20:48:06,879 - #21 =
INFO  20:48:06,879 - #20 new
INFO  20:48:06,879 - #41 int
INFO  20:48:06,879 - #23 [
INFO  20:48:06,879 - #41 size
INFO  20:48:06,879 - #22 ]
INFO  20:48:06,879 - #5 ;
INFO  20:48:06,879 - #47 read
INFO  20:48:06,879 - #6 (
INFO  20:48:06,879 - #41 x
INFO  20:48:06,879 - #7 )
INFO  20:48:06,879 - #5 ;
INFO  20:48:06,879 - #44 if
INFO  20:48:06,880 - #6 (
INFO  20:48:06,880 - #41 x
INFO  20:48:06,883 - #26 >
INFO  20:48:06,883 - #40 5
INFO  20:48:06,884 - #7 )
INFO  20:48:06,884 - #3 {
INFO  20:48:06,884 - #46 goto
INFO  20:48:06,885 - #41 skip
INFO  20:48:06,885 - #5 ;
INFO  20:48:06,885 - #4 }
INFO  20:48:06,885 - #41 i
INFO  20:48:06,885 - #21 =
INFO  20:48:06,885 - #40 0
INFO  20:48:06,885 - #5 ;
INFO  20:48:06,886 - #48 do
INFO  20:48:06,886 - #3 {
INFO  20:48:06,886 - #41 val
INFO  20:48:06,886 - #32 .
INFO  20:48:06,886 - #41 putp
INFO  20:48:06,886 - #6 (
INFO  20:48:06,886 - #40 0
INFO  20:48:06,886 - #8 ,
INFO  20:48:06,886 - #41 i
INFO  20:48:06,886 - #7 )
INFO  20:48:06,886 - #5 ;
INFO  20:48:06,886 - #41 val
INFO  20:48:06,886 - #32 .
INFO  20:48:06,886 - #41 putn
INFO  20:48:06,886 - #6 (
INFO  20:48:06,886 - #40 0
INFO  20:48:06,887 - #8 ,
INFO  20:48:06,887 - #41 i
INFO  20:48:06,887 - #7 )
INFO  20:48:06,887 - #5 ;
INFO  20:48:06,887 - #41 i
INFO  20:48:06,887 - #24 ++
INFO  20:48:06,887 - #5 ;
INFO  20:48:06,887 - #4 }
INFO  20:48:06,887 - #49 while
INFO  20:48:06,887 - #6 (
INFO  20:48:06,887 - #41 i
INFO  20:48:06,887 - #28 <
INFO  20:48:06,887 - #41 size
INFO  20:48:06,887 - #7 )
INFO  20:48:06,887 - #5 ;
INFO  20:48:06,887 - #41 skip
INFO  20:48:06,888 - #34 :
ERROR 20:48:06,888 - 
Sintaksna greska na liniji 38
ERROR 20:48:06,888 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 38
