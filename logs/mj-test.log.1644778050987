INFO  19:47:19,324 - Compiling source file: D:\ETF\sedmiSemestar\PP1\Jflex\Izvorni kod\MJCompiler\test\program.mj
INFO  19:47:19,363 - #2 program
INFO  19:47:19,363 - #5 test302
INFO  19:47:19,363 - #7 const
INFO  19:47:19,364 - #5 int
INFO  19:47:19,364 - #5 jedan
INFO  19:47:19,366 - #10 =
INFO  19:47:19,366 - #11 1
INFO  19:47:19,366 - #18 ;
INFO  19:47:19,367 - #5 int
INFO  19:47:19,367 - #5 i
INFO  19:47:19,368 - #18 ;
INFO  19:47:19,368 - #5 bool
INFO  19:47:19,369 - #5 ibool
INFO  19:47:19,369 - #18 ;
INFO  19:47:19,369 - #5 int
INFO  19:47:19,369 - #5 niz2
INFO  19:47:19,369 - #18 ;
INFO  19:47:19,369 - #19 record
INFO  19:47:19,369 - #5 Test
INFO  19:47:19,369 - #16 {
INFO  19:47:19,369 - #5 int
INFO  19:47:19,370 - #5 niz
INFO  19:47:19,370 - #12 [
INFO  19:47:19,370 - #13 ]
INFO  19:47:19,370 - #18 ;
INFO  19:47:19,370 - #5 int
INFO  19:47:19,371 - #5 a
INFO  19:47:19,371 - #18 ;
INFO  19:47:19,371 - #17 }
INFO  19:47:19,371 - #5 Test
INFO  19:47:19,371 - #5 t1
INFO  19:47:19,371 - #8 ,
INFO  19:47:19,371 - #5 t2
INFO  19:47:19,371 - #18 ;
INFO  19:47:19,371 - #16 {
INFO  19:47:19,371 - #5 int
INFO  19:47:19,372 - #5 sum
INFO  19:47:19,372 - #3 (
INFO  19:47:19,372 - #5 int
INFO  19:47:19,373 - #5 z
INFO  19:47:19,373 - #8 ,
INFO  19:47:19,373 - #5 int
INFO  19:47:19,373 - #5 d
INFO  19:47:19,373 - #4 )
INFO  19:47:19,373 - #16 {
INFO  19:47:19,373 - #26 return
INFO  19:47:19,374 - #5 z
INFO  19:47:19,374 - #35 +
INFO  19:47:19,374 - #5 d
INFO  19:47:19,375 - #18 ;
INFO  19:47:19,376 - #17 }
INFO  19:47:19,376 - #5 int
INFO  19:47:19,376 - #5 inkrement
INFO  19:47:19,376 - #3 (
INFO  19:47:19,376 - #5 int
INFO  19:47:19,377 - #5 a
INFO  19:47:19,377 - #8 ,
INFO  19:47:19,377 - #5 int
INFO  19:47:19,377 - #5 inc
INFO  19:47:19,377 - #4 )
INFO  19:47:19,377 - #5 int
INFO  19:47:19,377 - #5 pom
INFO  19:47:19,377 - #18 ;
INFO  19:47:19,377 - #16 {
INFO  19:47:19,377 - #47 if
INFO  19:47:19,377 - #3 (
INFO  19:47:19,378 - #5 inc
INFO  19:47:19,378 - #45 ==
INFO  19:47:19,378 - #5 jedan
INFO  19:47:19,379 - #4 )
INFO  19:47:19,379 - #5 pom
INFO  19:47:19,379 - #10 =
INFO  19:47:19,379 - #11 1
INFO  19:47:19,381 - #18 ;
INFO  19:47:19,381 - #48 else
INFO  19:47:19,381 - #47 if
INFO  19:47:19,382 - #3 (
INFO  19:47:19,383 - #5 inc
INFO  19:47:19,383 - #45 ==
INFO  19:47:19,383 - #11 2
INFO  19:47:19,383 - #4 )
INFO  19:47:19,384 - #5 pom
INFO  19:47:19,384 - #10 =
INFO  19:47:19,384 - #5 a
INFO  19:47:19,384 - #18 ;
INFO  19:47:19,384 - #26 return
INFO  19:47:19,385 - #5 sum
INFO  19:47:19,386 - #3 (
INFO  19:47:19,386 - #5 a
INFO  19:47:19,386 - #8 ,
INFO  19:47:19,386 - #5 pom
INFO  19:47:19,386 - #4 )
INFO  19:47:19,386 - #18 ;
INFO  19:47:19,386 - #17 }
INFO  19:47:19,387 - #5 bool
INFO  19:47:19,387 - #5 verify
INFO  19:47:19,387 - #3 (
INFO  19:47:19,387 - #4 )
INFO  19:47:19,388 - #16 {
INFO  19:47:19,388 - #28 print
INFO  19:47:19,388 - #3 (
INFO  19:47:19,388 - #6 v
INFO  19:47:19,388 - #4 )
INFO  19:47:19,388 - #18 ;
INFO  19:47:19,388 - #26 return
INFO  19:47:19,388 - #9 false
INFO  19:47:19,389 - #18 ;
INFO  19:47:19,389 - #17 }
INFO  19:47:19,389 - #20 void
INFO  19:47:19,389 - #5 main
INFO  19:47:19,389 - #3 (
INFO  19:47:19,390 - #4 )
INFO  19:47:19,390 - #16 {
INFO  19:47:19,390 - #47 if
INFO  19:47:19,390 - #3 (
INFO  19:47:19,390 - #11 1
INFO  19:47:19,390 - #46 !=
INFO  19:47:19,390 - #11 1
INFO  19:47:19,392 - #4 )
INFO  19:47:19,392 - #28 print
INFO  19:47:19,392 - #3 (
INFO  19:47:19,392 - #34 -
INFO  19:47:19,392 - #11 6
INFO  19:47:19,392 - #4 )
INFO  19:47:19,392 - #18 ;
INFO  19:47:19,392 - #48 else
INFO  19:47:19,392 - #28 print
INFO  19:47:19,393 - #3 (
INFO  19:47:19,393 - #11 0
INFO  19:47:19,393 - #4 )
INFO  19:47:19,393 - #18 ;
INFO  19:47:19,393 - #17 }
ERROR 19:47:19,397 - 
Sintaksna greska na liniji 48
ERROR 19:47:19,398 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 48
