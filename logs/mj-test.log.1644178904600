INFO  21:19:57,445 - Compiling source file: D:\ETF\sedmiSemestar\PP1\Jflex\Izvorni kod\MJCompiler\test\program.mj
INFO  21:19:57,471 - #2 program
INFO  21:19:57,471 - #3 p
INFO  21:19:57,471 - #6 const
INFO  21:19:57,472 - #3 int
INFO  21:19:57,472 - #3 size
INFO  21:19:57,472 - #11 =
INFO  21:19:57,472 - #10 10
INFO  21:19:57,472 - #18 ;
INFO  21:19:57,473 - #14 class
INFO  21:19:57,473 - #3 Table
INFO  21:19:57,473 - #16 {
INFO  21:19:57,473 - #3 int
INFO  21:19:57,473 - #3 pos
INFO  21:19:57,473 - #12 [
INFO  21:19:57,473 - #7 ,
ERROR 21:19:57,473 - 
Sintaksna greska na liniji 4
INFO  21:19:57,474 - #3 neg
INFO  21:19:57,474 - #12 [
INFO  21:19:57,474 - #13 ]
INFO  21:19:57,474 - #18 ;
INFO  21:19:57,474 - #16 {
INFO  21:19:57,727 - #20 void
INFO  21:19:57,727 - #3 putp
INFO  21:19:57,727 - #4 (
INFO  21:19:57,727 - #3 int
INFO  21:19:57,727 - #3 a
INFO  21:19:57,728 - #7 ,
INFO  21:19:57,728 - #3 int
INFO  21:19:57,728 - #3 idx
INFO  21:19:57,728 - #5 )
ERROR 21:19:57,728 - Izvrsen oporavak do , u liniji 4
ERROR 21:19:57,730 - 
Sintaksna greska na liniji 6
INFO  21:19:57,730 - #16 {
INFO  21:19:57,730 - #51 this
INFO  21:19:57,730 - #40 .
INFO  21:19:57,730 - #3 pos
INFO  21:19:57,731 - #12 [
INFO  21:19:57,731 - #3 idx
INFO  21:19:57,731 - #13 ]
INFO  21:19:57,731 - #11 =
INFO  21:19:57,731 - #3 a
INFO  21:19:57,731 - #18 ;
INFO  21:19:57,731 - #17 }
INFO  21:19:57,731 - #20 void
INFO  21:19:57,732 - #3 putn
INFO  21:19:57,732 - #4 (
INFO  21:19:57,732 - #3 int
INFO  21:19:57,732 - #3 a
INFO  21:19:57,732 - #7 ,
INFO  21:19:57,732 - #3 int
INFO  21:19:57,732 - #3 idx
INFO  21:19:57,732 - #5 )
ERROR 21:19:57,732 - Izvrsen oporavak do , u liniji 6
ERROR 21:19:57,732 - 
Sintaksna greska na liniji 7
INFO  21:19:57,732 - #16 {
INFO  21:19:57,732 - #51 this
INFO  21:19:57,732 - #40 .
INFO  21:19:57,732 - #3 neg
INFO  21:19:57,732 - #12 [
INFO  21:19:57,732 - #3 idx
INFO  21:19:57,732 - #13 ]
INFO  21:19:57,732 - #11 =
INFO  21:19:57,732 - #3 a
INFO  21:19:57,733 - #18 ;
INFO  21:19:57,733 - #17 }
INFO  21:19:57,733 - #3 int
INFO  21:19:57,733 - #3 getp
INFO  21:19:57,733 - #4 (
INFO  21:19:57,733 - #3 int
INFO  21:19:57,733 - #3 idx
INFO  21:19:57,736 - #5 )
INFO  21:19:57,736 - #16 {
INFO  21:19:57,736 - #26 return
INFO  21:19:57,736 - #3 pos
INFO  21:19:57,736 - #12 [
INFO  21:19:57,736 - #3 idx
INFO  21:19:57,736 - #13 ]
INFO  21:19:57,736 - #18 ;
INFO  21:19:57,736 - #17 }
INFO  21:19:57,737 - #3 int
INFO  21:19:57,737 - #3 getn
INFO  21:19:57,737 - #4 (
INFO  21:19:57,737 - #3 int
INFO  21:19:57,737 - #3 idx
INFO  21:19:57,737 - #5 )
INFO  21:19:57,737 - #16 {
INFO  21:19:57,737 - #26 return
INFO  21:19:57,737 - #3 neg
INFO  21:19:57,737 - #12 [
INFO  21:19:57,737 - #3 idx
INFO  21:19:57,737 - #13 ]
INFO  21:19:57,737 - #18 ;
INFO  21:19:57,737 - #17 }
INFO  21:19:57,738 - #17 }
INFO  21:19:57,738 - #17 }
INFO  21:19:57,738 - #19 record
INFO  21:19:57,738 - #3 Board
INFO  21:19:57,738 - #16 {
INFO  21:19:57,738 - #3 int
INFO  21:19:57,738 - #3 rows
INFO  21:19:57,738 - #7 ,
INFO  21:19:57,738 - #3 columns
INFO  21:19:57,738 - #18 ;
INFO  21:19:57,738 - #17 }
INFO  21:19:57,738 - #3 Table
INFO  21:19:57,738 - #3 val
INFO  21:19:57,738 - #18 ;
INFO  21:19:57,738 - #3 Board
INFO  21:19:57,739 - #3 board
INFO  21:19:57,739 - #18 ;
INFO  21:19:57,739 - #16 {
INFO  21:19:57,739 - #20 void
INFO  21:19:57,739 - #3 f
INFO  21:19:57,739 - #4 (
INFO  21:19:57,739 - #3 char
INFO  21:19:57,739 - #3 ch
INFO  21:19:57,739 - #7 ,
INFO  21:19:57,739 - #3 int
INFO  21:19:57,739 - #3 a
INFO  21:19:57,739 - #7 ,
ERROR 21:19:57,739 - Izvrsen oporavak do , u liniji 7
INFO  21:19:57,740 - #3 int
INFO  21:19:57,740 - #3 arg
ERROR 21:19:57,740 - 
Sintaksna greska na liniji 18
INFO  21:19:57,740 - #5 )
INFO  21:19:57,740 - #3 int
INFO  21:19:57,740 - #3 x
INFO  21:19:57,740 - #18 ;
INFO  21:19:57,740 - #16 {
INFO  21:19:57,740 - #3 x
INFO  21:19:57,740 - #11 =
INFO  21:19:57,740 - #3 arg
INFO  21:19:57,740 - #18 ;
INFO  21:19:57,740 - #17 }
INFO  21:19:57,741 - #20 void
INFO  21:19:57,741 - #3 main
INFO  21:19:57,741 - #4 (
INFO  21:19:57,741 - #5 )
INFO  21:19:57,743 - #3 int
INFO  21:19:57,743 - #3 x
INFO  21:19:57,743 - #7 ,
INFO  21:19:57,743 - #3 i
INFO  21:19:57,743 - #18 ;
INFO  21:19:57,743 - #3 char
INFO  21:19:57,743 - #3 c
INFO  21:19:57,743 - #18 ;
INFO  21:19:57,743 - #16 {
INFO  21:19:57,743 - #3 val
INFO  21:19:57,743 - #11 =
INFO  21:19:57,743 - #39 new
INFO  21:19:57,743 - #3 Table
INFO  21:19:57,743 - #18 ;
INFO  21:19:57,743 - #3 val
INFO  21:19:57,743 - #40 .
INFO  21:19:57,744 - #3 pos
INFO  21:19:57,744 - #11 =
INFO  21:19:57,744 - #39 new
INFO  21:19:57,744 - #3 int
INFO  21:19:57,744 - #12 [
INFO  21:19:57,744 - #3 size
INFO  21:19:57,744 - #13 ]
INFO  21:19:57,744 - #18 ;
INFO  21:19:57,744 - #3 val
INFO  21:19:57,744 - #40 .
INFO  21:19:57,744 - #3 neg
INFO  21:19:57,744 - #11 =
INFO  21:19:57,744 - #39 new
INFO  21:19:57,744 - #3 int
INFO  21:19:57,744 - #12 [
INFO  21:19:57,744 - #3 size
INFO  21:19:57,744 - #13 ]
INFO  21:19:57,744 - #18 ;
INFO  21:19:57,744 - #27 read
INFO  21:19:57,745 - #4 (
INFO  21:19:57,745 - #3 x
INFO  21:19:57,745 - #5 )
INFO  21:19:57,745 - #18 ;
INFO  21:19:57,745 - #47 if
INFO  21:19:57,745 - #4 (
INFO  21:19:57,745 - #3 x
INFO  21:19:57,745 - #41 >
INFO  21:19:57,745 - #10 5
INFO  21:19:57,745 - #5 )
INFO  21:19:57,745 - #16 {
INFO  21:19:57,745 - #29 goto
INFO  21:19:57,745 - #3 skip
INFO  21:19:57,745 - #18 ;
INFO  21:19:57,745 - #17 }
INFO  21:19:57,745 - #3 i
INFO  21:19:57,745 - #11 =
INFO  21:19:57,745 - #10 0
INFO  21:19:57,745 - #18 ;
INFO  21:19:57,745 - #22 do
INFO  21:19:57,746 - #16 {
INFO  21:19:57,746 - #3 val
INFO  21:19:57,746 - #40 .
INFO  21:19:57,746 - #3 putp
INFO  21:19:57,746 - #4 (
INFO  21:19:57,746 - #10 0
INFO  21:19:57,746 - #7 ,
INFO  21:19:57,746 - #3 i
INFO  21:19:57,746 - #5 )
INFO  21:19:57,746 - #18 ;
INFO  21:19:57,746 - #3 val
INFO  21:19:57,746 - #40 .
INFO  21:19:57,746 - #3 putn
INFO  21:19:57,746 - #4 (
INFO  21:19:57,746 - #10 0
INFO  21:19:57,746 - #7 ,
INFO  21:19:57,746 - #3 i
INFO  21:19:57,746 - #5 )
INFO  21:19:57,746 - #18 ;
INFO  21:19:57,746 - #3 i
INFO  21:19:57,747 - #30 ++
INFO  21:19:57,747 - #18 ;
INFO  21:19:57,747 - #17 }
INFO  21:19:57,747 - #23 while
INFO  21:19:57,747 - #4 (
INFO  21:19:57,747 - #3 i
INFO  21:19:57,747 - #43 <
INFO  21:19:57,747 - #3 size
INFO  21:19:57,747 - #5 )
INFO  21:19:57,747 - #18 ;
INFO  21:19:57,747 - #3 skip
INFO  21:19:57,747 - #21 :
INFO  21:19:57,747 - #3 f
INFO  21:19:57,747 - #4 (
INFO  21:19:57,747 - #3 c
INFO  21:19:57,747 - #7 ,
INFO  21:19:57,747 - #3 x
INFO  21:19:57,747 - #7 ,
INFO  21:19:57,747 - #3 i
INFO  21:19:57,747 - #5 )
INFO  21:19:57,747 - #18 ;
INFO  21:19:57,748 - #3 board
INFO  21:19:57,748 - #11 =
INFO  21:19:57,748 - #39 new
INFO  21:19:57,748 - #3 Board
INFO  21:19:57,748 - #18 ;
INFO  21:19:57,748 - #27 read
INFO  21:19:57,748 - #4 (
INFO  21:19:57,748 - #3 board
INFO  21:19:57,748 - #40 .
INFO  21:19:57,748 - #3 rows
INFO  21:19:57,748 - #5 )
INFO  21:19:57,748 - #18 ;
INFO  21:19:57,748 - #3 x
INFO  21:19:57,748 - #11 =
INFO  21:19:57,748 - #3 board
INFO  21:19:57,748 - #40 .
INFO  21:19:57,748 - #3 rows
INFO  21:19:57,748 - #18 ;
INFO  21:19:57,749 - #22 do
INFO  21:19:57,749 - #16 {
INFO  21:19:57,749 - #47 if
INFO  21:19:57,749 - #4 (
INFO  21:19:57,749 - #3 x
INFO  21:19:57,749 - #44 <=
INFO  21:19:57,749 - #10 0
INFO  21:19:57,749 - #5 )
INFO  21:19:57,749 - #24 break
INFO  21:19:57,749 - #18 ;
INFO  21:19:57,749 - #47 if
INFO  21:19:57,749 - #4 (
INFO  21:19:57,750 - #10 0
INFO  21:19:57,750 - #44 <=
INFO  21:19:57,750 - #3 x
INFO  21:19:57,750 - #33 &&
INFO  21:19:57,750 - #3 x
INFO  21:19:57,750 - #43 <
INFO  21:19:57,750 - #3 size
INFO  21:19:57,750 - #5 )
INFO  21:19:57,750 - #16 {
INFO  21:19:57,750 - #3 val
INFO  21:19:57,750 - #40 .
INFO  21:19:57,750 - #3 putp
INFO  21:19:57,750 - #4 (
INFO  21:19:57,750 - #3 val
INFO  21:19:57,750 - #40 .
INFO  21:19:57,750 - #3 getp
INFO  21:19:57,750 - #4 (
INFO  21:19:57,751 - #3 x
INFO  21:19:57,751 - #5 )
INFO  21:19:57,751 - #35 +
INFO  21:19:57,751 - #10 1
INFO  21:19:57,751 - #5 )
INFO  21:19:57,751 - #18 ;
INFO  21:19:57,751 - #17 }
INFO  21:19:57,751 - #48 else
INFO  21:19:57,751 - #47 if
INFO  21:19:57,751 - #4 (
INFO  21:19:57,751 - #34 -
INFO  21:19:57,751 - #3 size
INFO  21:19:57,751 - #43 <
INFO  21:19:57,751 - #3 x
INFO  21:19:57,751 - #33 &&
INFO  21:19:57,751 - #3 x
INFO  21:19:57,752 - #43 <
INFO  21:19:57,752 - #10 0
INFO  21:19:57,752 - #5 )
INFO  21:19:57,752 - #16 {
INFO  21:19:57,752 - #3 val
INFO  21:19:57,752 - #40 .
INFO  21:19:57,752 - #3 putn
INFO  21:19:57,752 - #4 (
INFO  21:19:57,752 - #3 val
INFO  21:19:57,752 - #40 .
INFO  21:19:57,752 - #3 getn
INFO  21:19:57,752 - #4 (
INFO  21:19:57,753 - #3 x
INFO  21:19:57,753 - #5 )
INFO  21:19:57,753 - #35 +
INFO  21:19:57,753 - #10 1
INFO  21:19:57,753 - #5 )
INFO  21:19:57,753 - #18 ;
INFO  21:19:57,753 - #17 }
INFO  21:19:57,753 - #27 read
INFO  21:19:57,753 - #4 (
INFO  21:19:57,753 - #3 x
INFO  21:19:57,753 - #5 )
INFO  21:19:57,753 - #18 ;
INFO  21:19:57,753 - #17 }
INFO  21:19:57,753 - #23 while
INFO  21:19:57,754 - #4 (
INFO  21:19:57,754 - #8 true
INFO  21:19:57,754 - #5 )
INFO  21:19:57,754 - #18 ;
INFO  21:19:57,754 - #17 }
INFO  21:19:57,754 - #17 }
ERROR 21:19:57,754 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 56
