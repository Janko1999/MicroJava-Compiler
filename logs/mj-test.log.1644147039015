INFO  12:26:15,253 - Compiling source file: D:\ETF\sedmiSemestar\PP1\Jflex\Izvorni kod\MJCompiler\test\program.mj
INFO  12:26:15,292 - #2 program
INFO  12:26:15,292 - #3 p
INFO  12:26:15,292 - #6 const
INFO  12:26:15,292 - #3 int
INFO  12:26:15,292 - #3 size
INFO  12:26:15,293 - #11 =
INFO  12:26:15,293 - #10 10
INFO  12:26:15,293 - #18 ;
INFO  12:26:15,294 - #14 class
INFO  12:26:15,294 - #3 Table
INFO  12:26:15,294 - #16 {
INFO  12:26:15,294 - #3 int
INFO  12:26:15,294 - #3 pos
INFO  12:26:15,294 - #12 [
INFO  12:26:15,295 - #13 ]
INFO  12:26:15,295 - #7 ,
INFO  12:26:15,295 - #3 neg
INFO  12:26:15,295 - #12 [
INFO  12:26:15,295 - #13 ]
INFO  12:26:15,296 - #18 ;
INFO  12:26:15,296 - #16 {
INFO  12:26:15,297 - #3 int
INFO  12:26:15,600 - #3 getp
INFO  12:26:15,600 - #4 (
INFO  12:26:15,600 - #3 int
INFO  12:26:15,601 - #3 idx
INFO  12:26:15,601 - #5 )
INFO  12:26:15,602 - #16 {
INFO  12:26:15,602 - #26 return
INFO  12:26:15,602 - #3 pos
INFO  12:26:15,602 - #12 [
INFO  12:26:15,602 - #3 idx
INFO  12:26:15,602 - #13 ]
INFO  12:26:15,605 - #18 ;
INFO  12:26:15,605 - #17 }
INFO  12:26:15,607 - #3 int
INFO  12:26:15,608 - #3 getn
INFO  12:26:15,608 - #4 (
INFO  12:26:15,608 - #3 int
INFO  12:26:15,609 - #3 idx
INFO  12:26:15,609 - #5 )
INFO  12:26:15,609 - #16 {
INFO  12:26:15,609 - #26 return
INFO  12:26:15,609 - #3 neg
INFO  12:26:15,609 - #12 [
INFO  12:26:15,610 - #3 idx
INFO  12:26:15,610 - #13 ]
INFO  12:26:15,610 - #18 ;
INFO  12:26:15,611 - #17 }
INFO  12:26:15,611 - #17 }
INFO  12:26:15,612 - #17 }
INFO  12:26:15,613 - #19 record
INFO  12:26:15,613 - #3 Board
INFO  12:26:15,613 - #16 {
INFO  12:26:15,613 - #3 int
INFO  12:26:15,613 - #3 rows
INFO  12:26:15,614 - #7 ,
INFO  12:26:15,615 - #3 columns
INFO  12:26:15,615 - #18 ;
INFO  12:26:15,615 - #17 }
INFO  12:26:15,615 - #3 Table
INFO  12:26:15,615 - #3 val
INFO  12:26:15,616 - #18 ;
INFO  12:26:15,616 - #3 Board
INFO  12:26:15,616 - #3 board
INFO  12:26:15,616 - #18 ;
INFO  12:26:15,616 - #16 {
INFO  12:26:15,618 - #20 void
INFO  12:26:15,618 - #3 f
INFO  12:26:15,618 - #4 (
INFO  12:26:15,618 - #3 char
INFO  12:26:15,618 - #3 ch
INFO  12:26:15,618 - #7 ,
INFO  12:26:15,618 - #3 int
INFO  12:26:15,618 - #3 a
INFO  12:26:15,619 - #7 ,
INFO  12:26:15,619 - #3 int
INFO  12:26:15,619 - #3 arg
INFO  12:26:15,619 - #5 )
INFO  12:26:15,619 - #3 int
INFO  12:26:15,619 - #3 x
INFO  12:26:15,620 - #18 ;
INFO  12:26:15,620 - #16 {
INFO  12:26:15,620 - #3 x
INFO  12:26:15,620 - #11 =
INFO  12:26:15,620 - #3 arg
INFO  12:26:15,621 - #18 ;
INFO  12:26:15,621 - #17 }
INFO  12:26:15,621 - #20 void
INFO  12:26:15,622 - #3 main
INFO  12:26:15,622 - #4 (
INFO  12:26:15,622 - #5 )
INFO  12:26:15,623 - #3 int
INFO  12:26:15,623 - #3 x
INFO  12:26:15,623 - #7 ,
INFO  12:26:15,623 - #3 i
INFO  12:26:15,623 - #18 ;
INFO  12:26:15,623 - #3 char
INFO  12:26:15,623 - #3 c
INFO  12:26:15,624 - #18 ;
INFO  12:26:15,624 - #16 {
INFO  12:26:15,624 - #3 val
INFO  12:26:15,624 - #11 =
INFO  12:26:15,624 - #39 new
INFO  12:26:15,624 - #3 Table
INFO  12:26:15,625 - #18 ;
INFO  12:26:15,625 - #3 val
INFO  12:26:15,625 - #40 .
INFO  12:26:15,625 - #3 pos
INFO  12:26:15,625 - #11 =
INFO  12:26:15,626 - #39 new
INFO  12:26:15,626 - #3 int
INFO  12:26:15,626 - #12 [
INFO  12:26:15,626 - #3 size
INFO  12:26:15,626 - #13 ]
INFO  12:26:15,626 - #18 ;
INFO  12:26:15,627 - #3 val
INFO  12:26:15,627 - #40 .
INFO  12:26:15,627 - #3 neg
INFO  12:26:15,627 - #11 =
INFO  12:26:15,627 - #39 new
INFO  12:26:15,627 - #3 int
INFO  12:26:15,627 - #12 [
INFO  12:26:15,627 - #3 size
INFO  12:26:15,627 - #13 ]
INFO  12:26:15,627 - #18 ;
INFO  12:26:15,628 - #27 read
INFO  12:26:15,628 - #4 (
INFO  12:26:15,628 - #3 x
INFO  12:26:15,628 - #5 )
INFO  12:26:15,628 - #18 ;
INFO  12:26:15,628 - #47 if
INFO  12:26:15,628 - #4 (
INFO  12:26:15,628 - #3 x
INFO  12:26:15,628 - #41 >
INFO  12:26:15,628 - #10 5
INFO  12:26:15,629 - #5 )
INFO  12:26:15,630 - #16 {
INFO  12:26:15,630 - #29 goto
INFO  12:26:15,630 - #3 skip
INFO  12:26:15,630 - #18 ;
INFO  12:26:15,631 - #17 }
INFO  12:26:15,631 - #3 i
INFO  12:26:15,631 - #11 =
INFO  12:26:15,631 - #10 0
INFO  12:26:15,631 - #18 ;
INFO  12:26:15,632 - #22 do
INFO  12:26:15,632 - #16 {
INFO  12:26:15,632 - #3 val
INFO  12:26:15,632 - #40 .
INFO  12:26:15,632 - #3 putp
INFO  12:26:15,632 - #4 (
INFO  12:26:15,632 - #10 0
INFO  12:26:15,632 - #7 ,
INFO  12:26:15,632 - #3 i
INFO  12:26:15,632 - #5 )
INFO  12:26:15,632 - #18 ;
INFO  12:26:15,632 - #3 val
INFO  12:26:15,632 - #40 .
INFO  12:26:15,632 - #3 putn
INFO  12:26:15,632 - #4 (
INFO  12:26:15,632 - #10 0
INFO  12:26:15,633 - #7 ,
INFO  12:26:15,633 - #3 i
INFO  12:26:15,633 - #5 )
INFO  12:26:15,633 - #18 ;
INFO  12:26:15,633 - #3 i
INFO  12:26:15,633 - #30 ++
INFO  12:26:15,633 - #18 ;
INFO  12:26:15,633 - #17 }
INFO  12:26:15,633 - #23 while
INFO  12:26:15,633 - #4 (
INFO  12:26:15,633 - #3 i
INFO  12:26:15,633 - #43 <
INFO  12:26:15,633 - #3 size
INFO  12:26:15,634 - #5 )
INFO  12:26:15,634 - #18 ;
INFO  12:26:15,634 - #3 skip
INFO  12:26:15,634 - #21 :
INFO  12:26:15,634 - #3 f
INFO  12:26:15,634 - #4 (
INFO  12:26:15,634 - #3 c
INFO  12:26:15,634 - #7 ,
INFO  12:26:15,634 - #3 x
INFO  12:26:15,634 - #7 ,
ERROR 12:26:15,634 - 
Sintaksna greska na liniji 38
ERROR 12:26:15,635 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 38
